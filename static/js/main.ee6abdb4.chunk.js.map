{"version":3,"sources":["Components/Notifications/AlertMessage.js","Components/GuestList/GuestList.js","Components/GuestPhonebook/GuestPhonebook.js","App.js","index.js"],"names":["Notification","name","clearAlert","className","onClick","GuestList","state","contacts","id","number","filter","onDeleteGuest","event","target","contact","setState","onAddPerson","personData","prev","onchange","e","value","this","some","item","toLowerCase","filteredContacts","person","indexOf","isNameExist","type","onChange","placeholder","TransitionGroup","map","user","index","CSSTransition","key","uuidv4","timeout","classNames","unmountOnExit","Component","Guest","props","AddGuest","alertOn","inputHandler","postNum","in","appear","role","aria-label","GuestPhoneBook","App","GuestPhonebook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee6abdb4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AlertMessage.css\";\n\nconst Notification = ({ name, clearAlert }) => {\n  return (\n    <div className=\"wrapper\">\n      <h2>Contact of {name} is already in the list.</h2>\n      <p>Please enter the number which is not in the list.</p>\n      <button onClick={clearAlert}>Close</button>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport AlertMessage from \"../Notifications/AlertMessage\";\nimport \"../Notifications/AlertAnimation.css\";\n\nclass GuestList extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  onDeleteGuest = (event) => {\n    const id = event.target.id;\n    const { contacts: contactList } = this.state;\n    const contacts = contactList.filter((contact) => contact.id !== id);\n    this.setState({ contacts });\n  };\n\n  onAddPerson = (personData) => {\n    this.setState((prev) => ({\n      contacts: [...prev.contacts, personData],\n    }));\n  };\n\n  isNameExist(name) {\n    const result = this.state.contacts.some(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    );\n    if (result) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  onchange = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.state.contacts.filter((person) => {\n      return person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div className=\"phoneBookList\">\n        <AddGuest\n          onAddPerson={this.onAddPerson}\n          isNameExist={this.isNameExist}\n          state={this.state}\n        />\n        <div className=\"Guest\">\n          <input\n            type=\"text\"\n            value={this.state.filter}\n            onChange={this.onchange}\n            className=\"filter\"\n            placeholder=\"Find contact by name\"\n          />\n          <TransitionGroup className=\"Guests\">\n            {filteredContacts.map((user, index) => {\n              return (\n                <CSSTransition\n                  key={uuidv4()}\n                  timeout={250}\n                  classNames=\"Guests-item-fade\"\n                  unmountOnExit\n                >\n                  <Guest\n                    user={user}\n                    key={uuidv4()}\n                    onDeleteGuest={this.onDeleteGuest}\n                    index={index}\n                  />\n                </CSSTransition>\n              );\n            })}\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Guest = (props) => {\n  return (\n    <div className=\"contact\">\n      <h2 className=\"contactName\">{props.user.name}</h2>\n      <p>{props.user.number}</p>\n      <button\n        id={props.user.id}\n        className=\"delete\"\n        onClick={props.onDeleteGuest}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\n// Guest.propTypes = {\n//   contact: PropTypes.shape({\n//     name: PropTypes.string,\n//     id: PropTypes.string,\n//     namber: PropTypes.string,\n//   }).isRequired,\n//   deleteContact: PropTypes.func.isRequired,\n// };\n\nclass AddGuest extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    alertOn: false,\n  };\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  postNum = () => {\n    if (this.props.isNameExist(this.state.name)) {\n      this.props.onAddPerson(this.state);\n      this.setState({ name: \"\", number: \"\" });\n    } else {\n      this.setState({ alertOn: true });\n      // alert(`${this.state.name} already exists`);\n    }\n  };\n\n  clearAlert = () => {\n    this.setState({ alertOn: false });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"phoneBookApp\">\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames=\"logo-slideIn\"\n            unmountOnExit\n          >\n            <h1 className=\"logo\">\n              <span role=\"img\" aria-label=\"cool\">\n                ðŸ˜Ž\n              </span>\n              Phonebook\n              <span role=\"img\" aria-label=\"cool\">\n                ðŸ˜Ž\n              </span>\n            </h1>\n          </CSSTransition>\n          <div className=\"addContactForm\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.inputHandler}\n              placeholder=\"Name\"\n            />\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.inputHandler}\n              placeholder=\"Number\"\n            />\n            <button className=\"addGuest\" onClick={this.postNum}>\n              Add Guest\n            </button>\n            <CSSTransition\n              in={this.state.alertOn}\n              timeout={300}\n              classNames=\"wrapper\"\n              unmountOnExit\n            >\n              <AlertMessage\n                name={this.state.name}\n                clearAlert={this.clearAlert}\n              />\n            </CSSTransition>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default GuestList;\n","import React, { Component } from \"react\";\nimport GuestList from \"../GuestList/GuestList\";\n\nclass GuestPhoneBook extends Component {\n  render() {\n    return (\n      <div className=\"GuestPhoneBook\">\n        <GuestList />\n      </div>\n    );\n  }\n}\n\nexport default GuestPhoneBook;\n","import React, { Component } from \"react\";\nimport GuestPhonebook from \"./Components/GuestPhonebook/GuestPhonebook\";\nimport \"./App.css\";\nimport AlertMessage from \"./Components/Notifications/AlertMessage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <GuestPhonebook />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}